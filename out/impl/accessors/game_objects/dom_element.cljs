(ns phzr.impl.accessors.game-objects.dom-element)

(def dom-element-get-properties
  {:active "active"
   :alpha "alpha"
   :alpha-bottom-left "alphaBottomLeft"
   :alpha-bottom-right "alphaBottomRight"
   :alpha-top-left "alphaTopLeft"
   :alpha-top-right "alphaTopRight"
   :angle "angle"
   :blend-mode "blendMode"
   :body "body"
   :cache "cache"
   :camera-filter "cameraFilter"
   :data "data"
   :depth "depth"
   :display-height "displayHeight"
   :display-origin-x "displayOriginX"
   :display-origin-y "displayOriginY"
   :display-width "displayWidth"
   :height "height"
   :ignore-destroy "ignoreDestroy"
   :input "input"
   :name "name"
   :node "node"
   :origin-x "originX"
   :origin-y "originY"
   :parent "parent"
   :parent-container "parentContainer"
   :perspective "perspective"
   :render-flags "renderFlags"
   :rotate-3d "rotate3d"
   :rotate-3d-angle "rotate3dAngle"
   :rotation "rotation"
   :scale "scale"
   :scale-x "scaleX"
   :scale-y "scaleY"
   :scroll-factor-x "scrollFactorX"
   :scroll-factor-y "scrollFactorY"
   :skew-x "skewX"
   :skew-y "skewY"
   :state "state"
   :tab-index "tabIndex"
   :transform-only "transformOnly"
   :type "type"
   :visible "visible"
   :w "w"
   :width "width"
   :x "x"
   :y "y"
   :z "z"})

(def dom-element-set-properties
  {:active "active"
   :alpha "alpha"
   :alpha-bottom-left "alphaBottomLeft"
   :alpha-bottom-right "alphaBottomRight"
   :alpha-top-left "alphaTopLeft"
   :alpha-top-right "alphaTopRight"
   :angle "angle"
   :blend-mode "blendMode"
   :body "body"
   :cache "cache"
   :camera-filter "cameraFilter"
   :data "data"
   :depth "depth"
   :display-origin-x "displayOriginX"
   :display-origin-y "displayOriginY"
   :ignore-destroy "ignoreDestroy"
   :input "input"
   :name "name"
   :node "node"
   :origin-x "originX"
   :origin-y "originY"
   :parent "parent"
   :parent-container "parentContainer"
   :perspective "perspective"
   :render-flags "renderFlags"
   :rotate-3d "rotate3d"
   :rotate-3d-angle "rotate3dAngle"
   :rotation "rotation"
   :scale "scale"
   :scale-x "scaleX"
   :scale-y "scaleY"
   :scroll-factor-x "scrollFactorX"
   :scroll-factor-y "scrollFactorY"
   :skew-x "skewX"
   :skew-y "skewY"
   :state "state"
   :tab-index "tabIndex"
   :transform-only "transformOnly"
   :type "type"
   :visible "visible"
   :w "w"
   :x "x"
   :y "y"
   :z "z"})